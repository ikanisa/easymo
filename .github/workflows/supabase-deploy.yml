name: Supabase Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  gate:
    name: Check secrets
    runs-on: ubuntu-latest
    outputs:
      can_deploy: ${{ steps.check.outputs.can_deploy }}
    steps:
      - name: Evaluate required secrets
        id: check
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          if [ -n "${SUPABASE_ACCESS_TOKEN}" ] && [ -n "${SUPABASE_PROJECT_REF}" ] && [ -n "${SUPABASE_DB_PASSWORD}" ]; then
            echo "can_deploy=true" >> $GITHUB_OUTPUT
            echo "Secrets present: proceeding with deploy."
          else
            echo "can_deploy=false" >> $GITHUB_OUTPUT
            echo "Required secrets missing: skipping deploy." >&2
          fi

  migrate:
    if: ${{ needs.gate.outputs.can_deploy == 'true' }}
    needs: gate
    name: Apply DB migrations (remote)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Supabase CLI version
        run: supabase --version

      - name: Login to Supabase
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          if [ -z "${SUPABASE_ACCESS_TOKEN}" ]; then
            echo "::error::Missing SUPABASE_ACCESS_TOKEN secret" && exit 1
          fi
          supabase login --token "$SUPABASE_ACCESS_TOKEN"

      - name: Run remote migrations
        env:
          SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          if [ -z "${SUPABASE_PROJECT_REF}" ]; then
            echo "::error::Missing SUPABASE_PROJECT_REF secret" && exit 1
          fi
          if [ -z "${SUPABASE_DB_PASSWORD}" ]; then
            echo "::error::Missing SUPABASE_DB_PASSWORD secret" && exit 1
          fi
          # Apply migrations to the remote project database
          supabase db remote commit \
            --project-ref "$SUPABASE_PROJECT_REF" \
            --password "$SUPABASE_DB_PASSWORD"

  functions:
    name: Deploy Edge Functions
    runs-on: ubuntu-latest
    needs: [gate, migrate]
    if: ${{ needs.gate.outputs.can_deploy == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy all functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
        run: |
          if [ -z "${SUPABASE_ACCESS_TOKEN}" ] || [ -z "${PROJECT_REF}" ]; then
            echo "::error::Missing SUPABASE_ACCESS_TOKEN or SUPABASE_PROJECT_REF secrets" && exit 1
          fi
          bash tools/deploy_supabase_functions.sh --debug
