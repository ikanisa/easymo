name: Cloudflare Pages Preflight

# This workflow simulates Cloudflare Pages builds for both the Vite SPA and Next.js admin app
# to catch build failures before they reach Cloudflare's deployment environment.

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/!(cloudflare-pages-check.yml)'
      - 'supabase/migrations/**'
      - 'tests/**'
      - 'scripts/!(cloudflare/**)'

permissions:
  contents: read
  pull-requests: write

jobs:
  preflight-web:
    name: Preflight - Vite SPA (easymo-web)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: pnpm

      - name: Run Cloudflare build script (web)
        env:
          # Mock environment variables to simulate Cloudflare environment
          NODE_ENV: production
          CI: true
        run: bash scripts/cloudflare/build-web.sh

      - name: Verify build output
        run: |
          echo "Checking build artifacts..."
          if [[ ! -d "dist" ]]; then
            echo "❌ ERROR: dist directory not found"
            exit 1
          fi
          
          if [[ ! -f "dist/index.html" ]]; then
            echo "❌ ERROR: dist/index.html not found"
            exit 1
          fi
          
          echo "✓ Build artifacts verified"
          echo "Build size:"
          du -sh dist/
          echo ""
          echo "Build contents:"
          ls -lh dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vite-spa-dist
          path: dist/
          retention-days: 7

  preflight-admin:
    name: Preflight - Next.js Admin (easymo-admin)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: pnpm

      - name: Run Cloudflare build script (admin)
        env:
          # Mock environment variables to simulate Cloudflare environment
          NODE_ENV: production
          CI: true
          NEXT_PUBLIC_USE_MOCKS: false
          NEXT_PUBLIC_ENVIRONMENT_LABEL: Staging
          # Note: Real Supabase keys would be set in Cloudflare Pages project settings
          NEXT_PUBLIC_SUPABASE_URL: https://example.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
        run: bash admin-app/scripts/cloudflare/build.sh

      - name: Verify build output
        run: |
          echo "Checking build artifacts..."
          cd admin-app
          
          if [[ ! -d ".vercel/output" ]]; then
            echo "❌ ERROR: .vercel/output directory not found"
            exit 1
          fi
          
          if [[ ! -d ".vercel/output/static" ]]; then
            echo "❌ ERROR: .vercel/output/static directory not found"
            exit 1
          fi
          
          echo "✓ Build artifacts verified"
          echo "Build size:"
          du -sh .vercel/output/
          echo ""
          echo "Static output contents:"
          ls -lh .vercel/output/static/ | head -20

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-admin-output
          path: admin-app/.vercel/output/
          retention-days: 7

  summary:
    name: Preflight Summary
    runs-on: ubuntu-latest
    needs: [preflight-web, preflight-admin]
    if: always()
    
    steps:
      - name: Generate summary
        run: |
          echo "# Cloudflare Pages Preflight Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.preflight-web.result }}" == "success" ]]; then
            echo "✅ **Vite SPA (easymo-web)**: Build succeeded" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Vite SPA (easymo-web)**: Build failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.preflight-admin.result }}" == "success" ]]; then
            echo "✅ **Next.js Admin (easymo-admin)**: Build succeeded" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Next.js Admin (easymo-admin)**: Build failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.preflight-web.result }}" == "success" ]] && [[ "${{ needs.preflight-admin.result }}" == "success" ]]; then
            echo "Both builds passed! The following can now be deployed to Cloudflare Pages:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. **easymo-web**: Deploy from repository root using \`bash scripts/cloudflare/build-web.sh\`" >> $GITHUB_STEP_SUMMARY
            echo "2. **easymo-admin**: Deploy from admin-app using \`bash scripts/cloudflare/build.sh\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ One or more builds failed. Please review the logs and fix issues before deploying." >> $GITHUB_STEP_SUMMARY
          fi
