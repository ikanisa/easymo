name: Node CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  packages:
    name: Validate + Build Packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate Prisma schema (packages/db)
        run: pnpm -C packages/db exec prisma validate
      - name: Build packages
        run: |
          pnpm -C packages/shared build
          pnpm -C packages/commons build
          pnpm -C packages/messaging build
          pnpm -C packages/db build

  backend-apps:
    name: Build Backend Apps
    runs-on: ubuntu-latest
    needs: packages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build backend apps
        run: |
          pnpm -C apps/agent-core build
          pnpm -C apps/voice-bridge build
          pnpm -C apps/sip-webhook build
          pnpm -C apps/api build

  admin:
    name: Build + Test Admin App
    runs-on: ubuntu-latest
    needs: packages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared package for admin
        run: pnpm -F @va/shared build

      - name: Build admin-app (Next)
        run: pnpm -F @easymo/admin-app build

      - name: Test admin-app
        run: pnpm -F @easymo/admin-app test -- --run
