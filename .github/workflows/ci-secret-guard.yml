name: Secret Guard CI

on:
  push:
    branches: [ main, develop, 'feature/**', 'hardening/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  secret-guard:
    name: Check for exposed secrets
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Run secret detection script
        run: node tools/scripts/check-client-secrets.mjs
        
      - name: Report results
        if: failure()
        run: |
          echo "::error::Server secrets were found in client-facing code!"
          echo "::error::Review the output above and remove any server-only secrets from client code."
          exit 1

  build-check:
    name: Build admin-app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: easymo/admin-app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: easymo/admin-app/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build admin-app
        run: npm run build
        env:
          # Provide minimal env vars needed for build
          NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: placeholder-anon-key
          NEXT_PUBLIC_USE_MOCKS: true
      
      - name: Check build artifacts
        run: |
          if [ ! -d ".next" ]; then
            echo "::error::Build did not produce .next directory"
            exit 1
          fi
          echo "âœ… Build completed successfully"
