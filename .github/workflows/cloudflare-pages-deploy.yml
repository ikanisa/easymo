name: Deploy Admin Panel to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - 'admin-app/**'
      - 'packages/shared/**'
      - '.github/workflows/cloudflare-pages-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://easymo.ikanisa.com
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install root dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared packages
        run: |
          pnpm --filter @va/shared build
          pnpm --filter @easymo/commons build

      - name: Install admin-app dependencies
        working-directory: admin-app
        run: npm ci

      - name: Run security checks
        working-directory: admin-app
        run: |
          # Verify no service role keys in client env vars
          if grep -r "VITE_.*SERVICE_ROLE\|NEXT_PUBLIC_.*SERVICE_ROLE" .env.example 2>/dev/null; then
            echo "‚ùå SECURITY VIOLATION: Service role key found in public env vars"
            exit 1
          fi
          echo "‚úÖ Security check passed"

      - name: Build for Cloudflare Pages
        working-directory: admin-app
        env:
          NODE_ENV: production
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_USE_MOCKS: false
          NEXT_PUBLIC_ENVIRONMENT_LABEL: Production
          NEXT_PUBLIC_DEFAULT_ACTOR_ID: ${{ secrets.NEXT_PUBLIC_DEFAULT_ACTOR_ID }}
        run: |
          npm run build
          npx @cloudflare/next-on-pages

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: easymo-admin
          directory: admin-app/.vercel/output/static
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Post-deployment verification
        run: |
          echo "‚úÖ Deployment complete"
          echo "üåê Production URL: https://easymo.ikanisa.com"
          echo "üìù Verify the following:"
          echo "   - Domain is accessible"
          echo "   - Login page loads correctly"
          echo "   - Session cookies are set properly"
          echo "   - API routes are functional"
